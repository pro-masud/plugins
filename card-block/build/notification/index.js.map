{"version":3,"file":"notification/index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAqC;AACmB;AAAA;AAEzC,SAASI,IAAIA,CAAA,EAAG;EAC3B,oBACID,sDAAA;IAAA,GAAUF,sEAAa,CAAC,CAAC;IAAAI,QAAA,eACrBF,sDAAA;MAAAE,QAAA,EAAKL,mDAAE,CAAE,2BAA2B,EAAE,YAAa;IAAC,CAAK;EAAC,CACzD,CAAC;AAEd;;;;;;;;;;;;;;;;;;ACTwD;AAAA;AAEzC,SAASM,IAAIA,CAAA,EAAG;EAC3B,oBACIH,sDAAA;IAAA,GAAUF,kEAAa,CAACM,IAAI,CAAC,CAAC;IAAAF,QAAA,eAC1BF,sDAAA;MAAAE,QAAA,EAAG;IAAyB,CAAG;EAAC,CAC/B,CAAC;AAEd;;;;;;;;;;ACRA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNsD;AAC5B;AACA;AACU;AAEpCG,oEAAiB,CAACC,6CAAa,EAAE;EAC7B,GAAGA,wCAAQ;EACXE,IAAI,EAAEP,6CAAI;EACVG,IAAI,EAAED,6CAAIA;AACd,CAAC,CAAC,C","sources":["webpack://card-block/./src/notification/edit.js","webpack://card-block/./src/notification/save.js","webpack://card-block/external window \"ReactJSXRuntime\"","webpack://card-block/external window [\"wp\",\"blockEditor\"]","webpack://card-block/external window [\"wp\",\"blocks\"]","webpack://card-block/external window [\"wp\",\"i18n\"]","webpack://card-block/webpack/bootstrap","webpack://card-block/webpack/runtime/compat get default export","webpack://card-block/webpack/runtime/define property getters","webpack://card-block/webpack/runtime/hasOwnProperty shorthand","webpack://card-block/webpack/runtime/make namespace object","webpack://card-block/./src/notification/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\r\nimport { useBlockProps } from '@wordpress/block-editor';\r\n\r\nexport default function Edit() {\r\n    return (\r\n        <div { ...useBlockProps() }>\r\n            <p>{ __( 'Hello from the New Block!', 'card-block' ) }</p>\r\n        </div>\r\n    );\r\n}\r\n","import { useBlockProps } from '@wordpress/block-editor';\r\n\r\nexport default function Save() {\r\n    return (\r\n        <div { ...useBlockProps.save() }>\r\n            <p>Hello from the New Block!</p>\r\n        </div>\r\n    );\r\n}","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\r\nimport Edit from './edit';\r\nimport Save from './save';\r\nimport metadata from './block.json';\r\n\r\nregisterBlockType(metadata.name, {\r\n    ...metadata,\r\n    edit: Edit,\r\n    save: Save,\r\n});"],"names":["__","useBlockProps","jsx","_jsx","Edit","children","Save","save","registerBlockType","metadata","name","edit"],"sourceRoot":""}